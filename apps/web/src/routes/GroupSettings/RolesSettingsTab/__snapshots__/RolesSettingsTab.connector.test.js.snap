// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mapDispatchToProps correctly sets up dispatches 1`] = `
Object {
  "graphql": Object {
    "query": "mutation ($groupId: ID, $color: String, $name: String, $description: String, $emoji: String) {
        addGroupRole (groupId: $groupId, color: $color, name: $name, description: $description, emoji: $emoji) {
          id
          color
          name
          description
          emoji
          active
        }
      }",
    "variables": Object {
      "color": undefined,
      "description": undefined,
      "emoji": undefined,
      "groupId": 1,
      "name": undefined,
    },
  },
  "meta": Object {
    "color": undefined,
    "description": undefined,
    "emoji": undefined,
    "groupId": 1,
    "name": undefined,
    "optimistic": true,
  },
  "type": "ADD_GROUP_ROLE",
}
`;

exports[`mapDispatchToProps correctly sets up dispatches 2`] = `
Object {
  "graphql": Object {
    "query": "mutation ($personId: ID, $groupId: ID, $roleId: ID, $isCommonRole: Boolean) {
        addRoleToMember(personId: $personId, groupId: $groupId, roleId: $roleId, isCommonRole: $isCommonRole) {
          id
        }
      }",
    "variables": Object {
      "groupId": 11,
      "isCommonRole": true,
      "personId": 1,
      "roleId": 1,
    },
  },
  "meta": Object {
    "groupId": 11,
    "isCommonRole": true,
    "optimistic": true,
    "personId": 1,
    "roleId": 1,
  },
  "type": "ADD_ROLE_TO_MEMBER",
}
`;

exports[`mapDispatchToProps correctly sets up dispatches 3`] = `
Object {
  "graphql": Object {
    "query": "query ($id: ID, $autocomplete: String) {
        group (id: $id) {
          id
          members (first: 10, autocomplete: $autocomplete) {
            hasMore
            items {
              id
              name
              avatarUrl
            }
          }
        }
      }",
    "variables": Object {
      "autocomplete": "autocomplete",
      "id": 11,
    },
  },
  "meta": Object {
    "extractModel": "Group",
  },
  "type": "FETCH_STEWARD_SUGGESTIONS",
}
`;

exports[`mapDispatchToProps correctly sets up dispatches 4`] = `
Object {
  "type": "CLEAR_STEWARD_SUGGESTIONS",
}
`;

exports[`mapStateToProps works 1`] = `
Object {
  "suggestions": Array [],
}
`;

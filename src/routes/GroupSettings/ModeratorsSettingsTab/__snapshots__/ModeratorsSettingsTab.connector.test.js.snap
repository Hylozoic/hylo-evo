// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mapDispatchToProps correctly sets up dispatches 1`] = `
Object {
  "graphql": Object {
    "query": "mutation ($personId: ID, $groupId: ID) {
        addModerator(personId: $personId, groupId: $groupId) {
          id
          moderators(first: 100) {
            items {
              id
              name
              avatarUrl
            }
          }
        }
      }",
    "variables": Object {
      "groupId": 11,
      "personId": 10,
    },
  },
  "meta": Object {
    "groupId": 11,
    "optimistic": true,
    "personId": 10,
  },
  "type": "ADD_MODERATOR",
}
`;

exports[`mapDispatchToProps correctly sets up dispatches 2`] = `
Object {
  "graphql": Object {
    "query": "mutation ($personId: ID, $groupId: ID, $isRemoveFromGroup: Boolean) {
        removeModerator(
          personId: $personId
          groupId: $groupId
          isRemoveFromGroup: $isRemoveFromGroup
        ) {
          id
          moderators(first: 100) {
            items {
              id
              name
              avatarUrl
            }
          }
        }
      }",
    "variables": Object {
      "groupId": 11,
      "isRemoveFromGroup": true,
      "personId": 10,
    },
  },
  "meta": Object {
    "groupId": 11,
    "isRemoveFromGroup": true,
    "optimistic": true,
    "personId": 10,
  },
  "type": "REMOVE_MODERATOR",
}
`;

exports[`mapDispatchToProps correctly sets up dispatches 3`] = `
Object {
  "graphql": Object {
    "query": "query ($id: ID, $autocomplete: String) {
        group(id: $id) {
          id
          members(first: 10, autocomplete: $autocomplete) {
            hasMore
            items {
              id
              name
              avatarUrl
            }
          }
        }
      }",
    "variables": Object {
      "autocomplete": "autocomplete",
      "id": 11,
    },
  },
  "meta": Object {
    "extractModel": "Group",
  },
  "type": "FETCH_MODERATOR_SUGGESTIONS",
}
`;

exports[`mapDispatchToProps correctly sets up dispatches 4`] = `
Object {
  "type": "CLEAR_MODERATOR_SUGGESTIONS",
}
`;

exports[`mapStateToProps works 1`] = `
Object {
  "moderatorSuggestions": Array [],
  "moderators": Array [
    SessionBoundModel {
      "_fields": Object {
        "id": "1",
      },
    },
    SessionBoundModel {
      "_fields": Object {
        "id": "2",
      },
    },
  ],
}
`;

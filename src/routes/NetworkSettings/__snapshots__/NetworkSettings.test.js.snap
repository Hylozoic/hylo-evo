// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NetworkSettings renders correctly 1`] = `
<withRouter(Connect(FullPageModal))
  goToOnClose="/n/mycelium"
  narrow={true}
>
  <div>
    <input
      data-styleName="name"
      onChange={[Function]}
      type="text"
      value=""
    />
    <div
      data-styleName="banner"
      style={Object {}}
    >
      <Connect(ChangeImageButton)
        data-styleName="change-banner-button"
        update={[Function]}
        uploadSettings={
          Object {
            "id": 1,
            "type": "networkBanner",
          }
        }
      />
    </div>
    <div
      data-styleName="avatar"
      style={Object {}}
    >
      <Connect(ChangeImageButton)
        data-styleName="change-avatar-button"
        update={[Function]}
        uploadSettings={
          Object {
            "id": 1,
            "type": "networkAvatar",
          }
        }
      />
    </div>
    <SettingsControl
      label="Description"
      onChange={[Function]}
      type="textarea"
    />
    <div
      data-styleName="button-row"
    >
      <Button
        color="gray"
        data-styleName="save-button"
        label="Save Changes"
        onClick={null}
      />
    </div>
    <PaginatedList
      items={
        Array [
          Object {
            "id": 2,
          },
          Object {
            "id": 3,
          },
        ]
      }
      label="Moderators"
      page={2}
      pageCount={7}
      setPage={[Function]}
    />
    <PaginatedList
      data-styleName="communities"
      itemProps={
        Object {
          "size": 40,
          "square": true,
        }
      }
      items={
        Array [
          Object {
            "id": 4,
          },
          Object {
            "id": 5,
          },
        ]
      }
      label="Communities"
      page={3}
      pageCount={5}
      pending={true}
      setPage={[Function]}
    />
  </div>
</withRouter(Connect(FullPageModal))>
`;

exports[`PaginatedList renders correctly 1`] = `
<div
  data-styleName="paginated-list"
>
  <div
    data-styleName="section-label"
  />
  <RemovableListItem
    item={
      Object {
        "id": 2,
      }
    }
    size={40}
    square={true}
  />
  <RemovableListItem
    item={
      Object {
        "id": 3,
      }
    }
    size={40}
    square={true}
  />
  <PaginationLinks
    page={3}
    pageCount={5}
    setPage={[Function]}
  />
</div>
`;

exports[`PaginationLinks renders correctly 1`] = `
<div
  data-styleName="pagination-links"
>
  <PageLink
    i={0}
  />
  <PageLink
    i={1}
  />
  <PageLink
    i={2}
  />
  <PageLink
    i={3}
  />
  <PageLink
    i={4}
  />
</div>
`;

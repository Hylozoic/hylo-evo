// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Comment displays image attachments 1`] = `
<div>
  <div
    data-stylename="header"
  >
    <Avatar
      avatarUrl="foo.jpg"
      data-stylename="avatar"
      url="/groups/foo/members/1"
    />
    <Link
      data-stylename="userName"
      to="/groups/foo/members/1"
    >
      Joe Smith
    </Link>
    <span
      data-stylename="timestamp"
    >
      just now
    </span>
    <div
      data-stylename="upperRight"
    >
      <div
        data-for="reply-tip-undefined"
        data-stylename="commentAction"
        data-tip="Reply"
        onClick={[MockFunction]}
      >
        <Icon
          name="Replies"
        />
      </div>
    </div>
  </div>
  <CardImageAttachments
    attachments={
      Array [
        Object {
          "attachmentType": "image",
          "url": "foo.png",
        },
      ]
    }
    data-stylename="images"
    linked={true}
  />
  <CardFileAttachments
    attachments={
      Array [
        Object {
          "attachmentType": "image",
          "url": "foo.png",
        },
      ]
    }
    data-stylename="files"
  />
  <Connect(ClickCatcher)>
    <div
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p>text of the comment</p>",
        }
      }
      data-stylename="text"
      id="text"
    />
  </Connect(ClickCatcher)>
</div>
`;

exports[`Comment displays the delete menu when deleteComment is defined 1`] = `
<div>
  <div
    data-stylename="header"
  >
    <Avatar
      avatarUrl="foo.jpg"
      data-stylename="avatar"
      url="/groups/foo/members/1"
    />
    <Link
      data-stylename="userName"
      to="/groups/foo/members/1"
    >
      Joe Smith
    </Link>
    <span
      data-stylename="timestamp"
    >
      just now
    </span>
    <div
      data-stylename="upperRight"
    >
      <div
        data-for="reply-tip-undefined"
        data-stylename="commentAction"
        data-tip="Reply"
        onClick={[MockFunction]}
      >
        <Icon
          name="Replies"
        />
      </div>
      <Dropdown
        data-stylename="dropdown"
        items={
          Array [
            Object {
              "icon": "Edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "Trash",
              "label": "Delete",
              "onClick": [Function],
            },
          ]
        }
        toggleChildren={
          <Icon
            name="More"
          />
        }
      />
    </div>
  </div>
  <CardImageAttachments
    attachments={Array []}
    data-stylename="images"
    linked={true}
  />
  <CardFileAttachments
    attachments={Array []}
    data-stylename="files"
  />
  <Connect(ClickCatcher)>
    <div
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p>text of the comment</p>",
        }
      }
      data-stylename="text"
      id="text"
    />
  </Connect(ClickCatcher)>
</div>
`;

exports[`Comment displays the remove menu when removeComment is defined 1`] = `
<div>
  <div
    data-stylename="header"
  >
    <Avatar
      avatarUrl="foo.jpg"
      data-stylename="avatar"
      url="/groups/foo/members/1"
    />
    <Link
      data-stylename="userName"
      to="/groups/foo/members/1"
    >
      Joe Smith
    </Link>
    <span
      data-stylename="timestamp"
    >
      just now
    </span>
    <div
      data-stylename="upperRight"
    >
      <div
        data-for="reply-tip-undefined"
        data-stylename="commentAction"
        data-tip="Reply"
        onClick={[MockFunction]}
      >
        <Icon
          name="Replies"
        />
      </div>
      <Dropdown
        data-stylename="dropdown"
        items={
          Array [
            Object {
              "icon": "Trash",
              "label": "Remove",
              "onClick": [Function],
            },
          ]
        }
        toggleChildren={
          <Icon
            name="More"
          />
        }
      />
    </div>
  </div>
  <CardImageAttachments
    attachments={Array []}
    data-stylename="images"
    linked={true}
  />
  <CardFileAttachments
    attachments={Array []}
    data-stylename="files"
  />
  <Connect(ClickCatcher)>
    <div
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p>text of the comment</p>",
        }
      }
      data-stylename="text"
      id="text"
    />
  </Connect(ClickCatcher)>
</div>
`;

exports[`Comment does not display the delete menu when deleteComment is not defined 1`] = `
<div>
  <div
    data-stylename="header"
  >
    <Avatar
      avatarUrl="foo.jpg"
      data-stylename="avatar"
      url="/groups/foo/members/1"
    />
    <Link
      data-stylename="userName"
      to="/groups/foo/members/1"
    >
      Joe Smith
    </Link>
    <span
      data-stylename="timestamp"
    >
      just now
    </span>
    <div
      data-stylename="upperRight"
    >
      <div
        data-for="reply-tip-undefined"
        data-stylename="commentAction"
        data-tip="Reply"
        onClick={[MockFunction]}
      >
        <Icon
          name="Replies"
        />
      </div>
    </div>
  </div>
  <CardImageAttachments
    attachments={Array []}
    data-stylename="images"
    linked={true}
  />
  <CardFileAttachments
    attachments={Array []}
    data-stylename="files"
  />
  <Connect(ClickCatcher)>
    <div
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p>text of the comment</p>",
        }
      }
      data-stylename="text"
      id="text"
    />
  </Connect(ClickCatcher)>
</div>
`;

exports[`Comment does not display the remove menu when removeComment is not defined 1`] = `
<div>
  <div
    data-stylename="header"
  >
    <Avatar
      avatarUrl="foo.jpg"
      data-stylename="avatar"
      url="/groups/foo/members/1"
    />
    <Link
      data-stylename="userName"
      to="/groups/foo/members/1"
    >
      Joe Smith
    </Link>
    <span
      data-stylename="timestamp"
    >
      just now
    </span>
    <div
      data-stylename="upperRight"
    >
      <div
        data-for="reply-tip-undefined"
        data-stylename="commentAction"
        data-tip="Reply"
        onClick={[MockFunction]}
      >
        <Icon
          name="Replies"
        />
      </div>
      <Dropdown
        data-stylename="dropdown"
        items={
          Array [
            Object {
              "icon": "Edit",
              "label": "Edit",
              "onClick": [Function],
            },
            Object {
              "icon": "Trash",
              "label": "Delete",
              "onClick": [Function],
            },
          ]
        }
        toggleChildren={
          <Icon
            name="More"
          />
        }
      />
    </div>
  </div>
  <CardImageAttachments
    attachments={Array []}
    data-stylename="images"
    linked={true}
  />
  <CardFileAttachments
    attachments={Array []}
    data-stylename="files"
  />
  <Connect(ClickCatcher)>
    <div
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p>text of the comment</p>",
        }
      }
      data-stylename="text"
      id="text"
    />
  </Connect(ClickCatcher)>
</div>
`;

exports[`Comment renders correctly 1`] = `
<div>
  <div
    data-stylename="header"
  >
    <Avatar
      avatarUrl="foo.jpg"
      data-stylename="avatar"
      url="/groups/foo/members/1"
    />
    <Link
      data-stylename="userName"
      to="/groups/foo/members/1"
    >
      Joe Smith
    </Link>
    <span
      data-stylename="timestamp"
    >
      just now
    </span>
    <div
      data-stylename="upperRight"
    >
      <div
        data-for="reply-tip-undefined"
        data-stylename="commentAction"
        data-tip="Reply"
        onClick={[MockFunction]}
      >
        <Icon
          name="Replies"
        />
      </div>
    </div>
  </div>
  <CardImageAttachments
    attachments={Array []}
    data-stylename="images"
    linked={true}
  />
  <CardFileAttachments
    attachments={Array []}
    data-stylename="files"
  />
  <Connect(ClickCatcher)>
    <div
      dangerouslySetInnerHTML={
        Object {
          "__html": "<p>text of the comment</p>",
        }
      }
      data-stylename="text"
      id="text"
    />
  </Connect(ClickCatcher)>
</div>
`;

exports[`Comment renders correctly when editing 1`] = `
<div>
  <div
    data-stylename="header"
  >
    <Avatar
      avatarUrl="foo.jpg"
      data-stylename="avatar"
      url="/groups/foo/members/1"
    />
    <Link
      data-stylename="userName"
      to="/groups/foo/members/1"
    >
      Joe Smith
    </Link>
    <span
      data-stylename="timestamp"
    >
      Editing now
    </span>
    <div
      data-stylename="upperRight"
    >
      <div
        data-for="reply-tip-undefined"
        data-stylename="commentAction"
        data-tip="Reply"
        onClick={[MockFunction]}
      >
        <Icon
          name="Replies"
        />
      </div>
    </div>
  </div>
  <CardImageAttachments
    attachments={Array []}
    data-stylename="images"
    linked={true}
  />
  <CardFileAttachments
    attachments={Array []}
    data-stylename="files"
  />
  <Connect(ClickCatcher)>
    <Connect(HyloEditor)
      contentHTML="<p>text of the comment</p>"
      data-stylename="editor"
      parentComponent="CommentForm"
      submitOnReturnHandler={[Function]}
    />
  </Connect(ClickCatcher)>
</div>
`;

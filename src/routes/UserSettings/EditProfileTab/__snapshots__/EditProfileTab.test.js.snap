// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditProfileTab renders correctly 1`] = `
<div>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Your Settings
       | Hylo
    </title>
  </HelmetWrapper>
  <label
    data-stylename="label"
  >
    Your Name
  </label>
  <input
    data-stylename="name"
    onChange={[Function]}
    type="text"
    value="Yay"
  />
  <label
    data-stylename="label"
  >
    Banner and Avatar Images
  </label>
  <Connect(UploadAttachmentButton)
    data-stylename="change-banner"
    onSuccess={[Function]}
    type="userBanner"
  >
    <div
      data-stylename="banner-image"
      style={
        Object {
          "backgroundImage": "url(https://d3ngex8q79bk55.cloudfront.net/misc/default_user_banner.jpg)",
        }
      }
    >
      <Icon
        data-stylename="uploadIcon"
        name="AddImage"
      />
    </div>
  </Connect(UploadAttachmentButton)>
  <Connect(UploadAttachmentButton)
    data-stylename="change-avatar"
    onSuccess={[Function]}
    type="userAvatar"
  >
    <div
      data-stylename="avatar-image"
      style={Object {}}
    >
      <Icon
        data-stylename="uploadIcon"
        name="AddImage"
      />
    </div>
  </Connect(UploadAttachmentButton)>
  <SettingsControl
    label="Tagline"
    maxLength={60}
    onChange={[Function]}
    value=""
  />
  <SettingsControl
    label="About Me"
    onChange={[Function]}
    type="textarea"
    value=""
  />
  <SettingsControl
    label="Location"
    location=""
    locationObject={
      Object {
        "id": 1,
      }
    }
    onChange={[Function]}
    type="location"
  />
  <SettingsControl
    label="Website"
    onChange={[Function]}
    value=""
  />
  <SettingsControl
    label="My Skills & Interests"
    renderControl={[Function]}
  />
  <SettingsControl
    label="What I'm learning"
    renderControl={[Function]}
  />
  <SettingsControl
    label="Contact Email"
    onChange={[Function]}
    value=""
  />
  <SettingsControl
    label="Contact Phone"
    onChange={[Function]}
    value=""
  />
  <label
    data-stylename="social-label"
  >
    Social Accounts
  </label>
  <SocialControl
    handleUnlinkAccount={[Function]}
    label="Facebook"
    onLink={[Function]}
    provider="facebook"
    t={[Function]}
    updateSettingDirectly={[Function]}
  />
  <SocialControl
    handleUnlinkAccount={[Function]}
    label="Twitter"
    provider="twitter"
    t={[Function]}
    updateSettingDirectly={[Function]}
  />
  <SocialControl
    handleUnlinkAccount={[Function]}
    label="LinkedIn"
    provider="linkedin"
    t={[Function]}
    updateSettingDirectly={[Function]}
  />
  <div
    style={
      Object {
        "height": "80px",
      }
    }
  />
  <div
    data-stylename="saveChanges"
  >
    <span
      data-stylename="settingChanged"
    >
      Changes not saved
    </span>
    <Button
      color="green"
      data-stylename="save-button"
      label="Save Changes"
      onClick={[Function]}
    />
  </div>
</div>
`;

exports[`EditProfileTab renders correctly without location object 1`] = `
<div>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      Your Settings
       | Hylo
    </title>
  </HelmetWrapper>
  <label
    data-stylename="label"
  >
    Your Name
  </label>
  <div
    data-stylename="name-validation"
  >
    Name must not be blank
  </div>
  <input
    data-stylename="name"
    onChange={[Function]}
    type="text"
    value=""
  />
  <label
    data-stylename="label"
  >
    Banner and Avatar Images
  </label>
  <Connect(UploadAttachmentButton)
    data-stylename="change-banner"
    onSuccess={[Function]}
    type="userBanner"
  >
    <div
      data-stylename="banner-image"
      style={
        Object {
          "backgroundImage": "url(https://d3ngex8q79bk55.cloudfront.net/misc/default_user_banner.jpg)",
        }
      }
    >
      <Icon
        data-stylename="uploadIcon"
        name="AddImage"
      />
    </div>
  </Connect(UploadAttachmentButton)>
  <Connect(UploadAttachmentButton)
    data-stylename="change-avatar"
    onSuccess={[Function]}
    type="userAvatar"
  >
    <div
      data-stylename="avatar-image"
      style={Object {}}
    >
      <Icon
        data-stylename="uploadIcon"
        name="AddImage"
      />
    </div>
  </Connect(UploadAttachmentButton)>
  <SettingsControl
    label="Tagline"
    maxLength={60}
    onChange={[Function]}
    value=""
  />
  <SettingsControl
    label="About Me"
    onChange={[Function]}
    type="textarea"
    value=""
  />
  <SettingsControl
    label="Location"
    location=""
    onChange={[Function]}
    type="location"
  />
  <SettingsControl
    label="Website"
    onChange={[Function]}
    value=""
  />
  <SettingsControl
    label="My Skills & Interests"
    renderControl={[Function]}
  />
  <SettingsControl
    label="What I'm learning"
    renderControl={[Function]}
  />
  <SettingsControl
    label="Contact Email"
    onChange={[Function]}
    value=""
  />
  <SettingsControl
    label="Contact Phone"
    onChange={[Function]}
    value=""
  />
  <label
    data-stylename="social-label"
  >
    Social Accounts
  </label>
  <SocialControl
    handleUnlinkAccount={[Function]}
    label="Facebook"
    onLink={[Function]}
    provider="facebook"
    t={[Function]}
    updateSettingDirectly={[Function]}
  />
  <SocialControl
    handleUnlinkAccount={[Function]}
    label="Twitter"
    provider="twitter"
    t={[Function]}
    updateSettingDirectly={[Function]}
  />
  <SocialControl
    handleUnlinkAccount={[Function]}
    label="LinkedIn"
    provider="linkedin"
    t={[Function]}
    updateSettingDirectly={[Function]}
  />
  <div
    style={
      Object {
        "height": "80px",
      }
    }
  />
  <div
    data-stylename="saveChanges"
  >
    <span
      data-stylename=""
    >
      Current settings up to date
    </span>
    <Button
      color="gray"
      data-stylename="save-button"
      label="Save Changes"
      onClick={null}
    />
  </div>
</div>
`;

exports[`prompt rejects an incorrect facebook Url, calling itself again 1`] = `
Array [
  Array [
    "Please enter the full url for your {{network}} page.",
  ],
  Array [
    "Invalid url. Please enter the full url for your {{network}} page.",
  ],
]
`;

exports[`prompt rejects an incorrect linkedIn Url, calling itself again 1`] = `
Array [
  Array [
    "Please enter the full url for your {{network}} page.",
  ],
  Array [
    "Invalid url. Please enter the full url for your {{network}} page.",
  ],
]
`;

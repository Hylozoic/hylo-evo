// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Domain should call clearDomainFromCreateCommunity from mapDispatchToProps 1`] = `
Object {
  "payload": null,
  "type": "CreateCommunity/ADD_COMMUNITY_DOMAIN",
}
`;

exports[`Domain should call clearNameFromCreateCommunity from mapDispatchToProps 1`] = `
Object {
  "payload": null,
  "type": "CreateCommunity/ADD_COMMUNITY_NAME",
}
`;

exports[`Domain should call fetchCommunityExists from mapDispatchToProps 1`] = `
Object {
  "graphql": Object {
    "query": "
        query ($slug: String) {
          communityExists (slug: $slug) {
            exists
          }
        }
      ",
    "variables": Object {
      "slug": "slug",
    },
  },
  "type": "CreateCommunity/FETCH_COMMUNITY_EXISTS",
}
`;

exports[`Domain should call goToNextStep from mapDispatchToProps 1`] = `
Object {
  "payload": Object {
    "args": Array [
      "/c/communityDomain",
    ],
    "method": "push",
  },
  "type": "@@router/CALL_HISTORY_METHOD",
}
`;

exports[`Domain should call goToPrivacyStep from mapDispatchToProps 1`] = `
Object {
  "payload": Object {
    "args": Array [
      "/create-community/privacy",
    ],
    "method": "push",
  },
  "type": "@@router/CALL_HISTORY_METHOD",
}
`;

exports[`Domain should call updateUserSettings from mapDispatchToProps 1`] = `
Object {
  "graphql": Object {
    "query": "mutation ($changes: MeInput) {
        updateMe(changes: $changes) {
          id
        }
      }",
    "variables": Object {
      "changes": Object {
        "email": "email",
        "name": "name",
      },
    },
  },
  "meta": Object {
    "changes": Object {
      "email": "email",
      "name": "name",
    },
    "optimistic": true,
  },
  "type": "UPDATE_USER_SETTINGS",
}
`;

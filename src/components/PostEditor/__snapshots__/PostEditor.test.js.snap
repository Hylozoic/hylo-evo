// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ActionsBar matches last snapshot 1`] = `
<div
  data-stylename="actionsBar"
>
  <div
    data-stylename="actions"
  >
    <Connect(ChangeImageButton)
      attachmentType="image"
      update={[Function]}
      uploadSettings={
        Object {
          "id": 1,
          "type": "post",
        }
      }
    >
      <Icon
        data-stylename="action-icon"
        name="AddImage"
      />
    </Connect(ChangeImageButton)>
    <Connect(ChangeImageButton)
      attachmentType="file"
      uploadSettings={
        Object {
          "id": 1,
          "type": "post",
        }
      }
    >
      <Icon
        data-stylename="action-icon"
        name="Paperclip"
      />
    </Connect(ChangeImageButton)>
  </div>
  <Button
    color="green"
    data-stylename="postButton"
    disabled={false}
    label="Save"
    onClick={[Function]}
  />
</div>
`;

exports[`ActionsBar matches last snapshot while loading 1`] = `
<div
  data-stylename="actionsBar"
>
  <div
    data-stylename="actions"
  >
    <Connect(ChangeImageButton)
      attachmentType="image"
      update={[Function]}
      uploadSettings={
        Object {
          "id": 1,
          "type": "post",
        }
      }
    >
      <Icon
        data-stylename="action-icon"
        name="AddImage"
      />
    </Connect(ChangeImageButton)>
    <Connect(ChangeImageButton)
      attachmentType="file"
      uploadSettings={
        Object {
          "id": 1,
          "type": "post",
        }
      }
    >
      <Icon
        data-stylename="action-icon"
        name="Paperclip"
      />
    </Connect(ChangeImageButton)>
  </div>
  <Button
    color="green"
    data-stylename="postButton"
    disabled={true}
    label="Posting..."
    onClick={[Function]}
  />
</div>
`;

exports[`PostEditor editing a post form in editing mode 1`] = `
<div
  data-stylename="wrapper"
>
  <div
    data-stylename="header"
  >
    <div
      data-stylename="initial"
    >
      <div
        data-stylename="initial-prompt"
      >
        What are you looking to post?
      </div>
      <a
        data-stylename="initial-closeButton"
      >
        <Icon
          name="Ex"
        />
      </a>
    </div>
    <div
      data-stylename="postTypes"
    >
      <Button
        className="undefined"
        color=""
        disabled={false}
        label="discussion"
        onClick={[Function]}
      />
      <Button
        className=""
        color=""
        disabled={false}
        label="request"
        onClick={[Function]}
      />
      <Button
        className="undefined"
        color=""
        disabled={false}
        label="offer"
        onClick={[Function]}
      />
    </div>
  </div>
  <div
    data-stylename="body"
  >
    <div
      data-stylename="body-column"
    >
      <RoundImage
        data-stylename="titleAvatar"
        medium={true}
      />
    </div>
    <div
      data-stylename="body-column"
    >
      <input
        data-stylename="titleInput"
        disabled={false}
        onChange={[Function]}
        placeholder="What are you looking for help with?"
        type="text"
        value="valid title"
      />
      <Connect(HyloEditor)
        data-stylename="editor"
        onChange={[Function]}
        parentComponent="PostEditor"
        placeholder="Add a description"
        readOnly={false}
      />
    </div>
  </div>
  <LinkPreview
    linkPreview={
      Object {
        "id": "1",
        "title": "a link",
      }
    }
    onClose={[Function]}
  />
  <Connect(AttachmentManager)
    postId="test"
    type="image"
  />
  <Connect(AttachmentManager)
    postId="test"
    type="file"
  />
  <div
    data-stylename="footer"
  >
    <div
      data-stylename="postIn"
    >
      <div
        data-stylename="postIn-label"
      >
        Post in
      </div>
      <div
        data-stylename="postIn-communities"
      >
        <CommunitiesSelector
          onChange={[Function]}
          options={Array []}
          placeholder="Type community name..."
          readOnly={false}
          selected={
            Array [
              Object {
                "id": "1",
                "name": "test community 1",
              },
              Object {
                "id": "2",
                "name": "test community 2",
              },
            ]
          }
        />
      </div>
    </div>
    <ActionsBar
      id="test"
      loading={false}
      save={[Function]}
      submitButtonLabel="Save"
      valid={true}
    />
  </div>
</div>
`;

exports[`PostEditor editing a post post is loaded into fields 1`] = `
<div
  data-stylename="wrapper"
>
  <div
    data-stylename="header"
  >
    <div
      data-stylename="initial"
    >
      <div
        data-stylename="initial-prompt"
      >
        What are you looking to post?
      </div>
      <a
        data-stylename="initial-closeButton"
      >
        <Icon
          name="Ex"
        />
      </a>
    </div>
    <div
      data-stylename="postTypes"
    >
      <Button
        className="undefined"
        color=""
        disabled={false}
        label="discussion"
        onClick={[Function]}
      />
      <Button
        className=""
        color=""
        disabled={false}
        label="request"
        onClick={[Function]}
      />
      <Button
        className="undefined"
        color=""
        disabled={false}
        label="offer"
        onClick={[Function]}
      />
    </div>
  </div>
  <div
    data-stylename="body"
  >
    <div
      data-stylename="body-column"
    >
      <RoundImage
        data-stylename="titleAvatar"
        medium={true}
      />
    </div>
    <div
      data-stylename="body-column"
    >
      <input
        data-stylename="titleInput"
        disabled={false}
        onChange={[Function]}
        placeholder="What are you looking for help with?"
        type="text"
        value="valid title"
      />
      <Connect(HyloEditor)
        data-stylename="editor"
        onChange={[Function]}
        parentComponent="PostEditor"
        placeholder="Add a description"
        readOnly={false}
      />
    </div>
  </div>
  <LinkPreview
    linkPreview={
      Object {
        "id": "1",
        "title": "a link",
      }
    }
    onClose={[Function]}
  />
  <Connect(AttachmentManager)
    postId="test"
    type="image"
  />
  <Connect(AttachmentManager)
    postId="test"
    type="file"
  />
  <div
    data-stylename="footer"
  >
    <div
      data-stylename="postIn"
    >
      <div
        data-stylename="postIn-label"
      >
        Post in
      </div>
      <div
        data-stylename="postIn-communities"
      >
        <CommunitiesSelector
          onChange={[Function]}
          options={Array []}
          placeholder="Type community name..."
          readOnly={false}
          selected={
            Array [
              Object {
                "id": "1",
                "name": "test community 1",
              },
              Object {
                "id": "2",
                "name": "test community 2",
              },
            ]
          }
        />
      </div>
    </div>
    <ActionsBar
      id="test"
      loading={false}
      save={[Function]}
      submitButtonLabel="Save"
      valid={true}
    />
  </div>
</div>
`;

exports[`PostEditor for a new post correct title placeholder and type button selection for "discussion" type 1`] = `
<div
  data-stylename="wrapper"
>
  <div
    data-stylename="header"
  >
    <div
      data-stylename="initial"
    >
      <div
        data-stylename="initial-prompt"
      >
        What are you looking to post?
      </div>
      <a
        data-stylename="initial-closeButton"
      >
        <Icon
          name="Ex"
        />
      </a>
    </div>
    <div
      data-stylename="postTypes"
    >
      <Button
        className=""
        color=""
        disabled={false}
        label="discussion"
        onClick={[Function]}
      />
      <Button
        className="undefined"
        color=""
        disabled={false}
        label="request"
        onClick={[Function]}
      />
      <Button
        className="undefined"
        color=""
        disabled={false}
        label="offer"
        onClick={[Function]}
      />
    </div>
  </div>
  <div
    data-stylename="body"
  >
    <div
      data-stylename="body-column"
    >
      <RoundImage
        data-stylename="titleAvatar"
        medium={true}
      />
    </div>
    <div
      data-stylename="body-column"
    >
      <input
        data-stylename="titleInput"
        disabled={false}
        onChange={[Function]}
        placeholder="discussion placeholder"
        type="text"
        value=""
      />
      <Connect(HyloEditor)
        data-stylename="editor"
        onChange={[Function]}
        parentComponent="PostEditor"
        placeholder="Add a description"
        readOnly={false}
      />
    </div>
  </div>
  <Connect(AttachmentManager)
    postId="new"
    type="image"
  />
  <Connect(AttachmentManager)
    postId="new"
    type="file"
  />
  <div
    data-stylename="footer"
  >
    <div
      data-stylename="postIn"
    >
      <div
        data-stylename="postIn-label"
      >
        Post in
      </div>
      <div
        data-stylename="postIn-communities"
      >
        <CommunitiesSelector
          onChange={[Function]}
          options={Array []}
          placeholder="Type community name..."
          readOnly={false}
          selected={Array []}
        />
      </div>
    </div>
    <ActionsBar
      loading={false}
      save={[Function]}
      submitButtonLabel="Post"
      valid={false}
    />
  </div>
</div>
`;

exports[`PostEditor for a new post correct title placeholder and type button selection for "offer" type 1`] = `
<div
  data-stylename="wrapper"
>
  <div
    data-stylename="header"
  >
    <div
      data-stylename="initial"
    >
      <div
        data-stylename="initial-prompt"
      >
        What are you looking to post?
      </div>
      <a
        data-stylename="initial-closeButton"
      >
        <Icon
          name="Ex"
        />
      </a>
    </div>
    <div
      data-stylename="postTypes"
    >
      <Button
        className="undefined"
        color=""
        disabled={false}
        label="discussion"
        onClick={[Function]}
      />
      <Button
        className="undefined"
        color=""
        disabled={false}
        label="request"
        onClick={[Function]}
      />
      <Button
        className=""
        color=""
        disabled={false}
        label="offer"
        onClick={[Function]}
      />
    </div>
  </div>
  <div
    data-stylename="body"
  >
    <div
      data-stylename="body-column"
    >
      <RoundImage
        data-stylename="titleAvatar"
        medium={true}
      />
    </div>
    <div
      data-stylename="body-column"
    >
      <input
        data-stylename="titleInput"
        disabled={false}
        onChange={[Function]}
        placeholder="offer placeholder"
        type="text"
        value=""
      />
      <Connect(HyloEditor)
        data-stylename="editor"
        onChange={[Function]}
        parentComponent="PostEditor"
        placeholder="Add a description"
        readOnly={false}
      />
    </div>
  </div>
  <Connect(AttachmentManager)
    postId="new"
    type="image"
  />
  <Connect(AttachmentManager)
    postId="new"
    type="file"
  />
  <div
    data-stylename="footer"
  >
    <div
      data-stylename="postIn"
    >
      <div
        data-stylename="postIn-label"
      >
        Post in
      </div>
      <div
        data-stylename="postIn-communities"
      >
        <CommunitiesSelector
          onChange={[Function]}
          options={Array []}
          placeholder="Type community name..."
          readOnly={false}
          selected={Array []}
        />
      </div>
    </div>
    <ActionsBar
      loading={false}
      save={[Function]}
      submitButtonLabel="Post"
      valid={false}
    />
  </div>
</div>
`;

exports[`PostEditor for a new post correct title placeholder and type button selection for "request" type 1`] = `
<div
  data-stylename="wrapper"
>
  <div
    data-stylename="header"
  >
    <div
      data-stylename="initial"
    >
      <div
        data-stylename="initial-prompt"
      >
        What are you looking to post?
      </div>
      <a
        data-stylename="initial-closeButton"
      >
        <Icon
          name="Ex"
        />
      </a>
    </div>
    <div
      data-stylename="postTypes"
    >
      <Button
        className="undefined"
        color=""
        disabled={false}
        label="discussion"
        onClick={[Function]}
      />
      <Button
        className=""
        color=""
        disabled={false}
        label="request"
        onClick={[Function]}
      />
      <Button
        className="undefined"
        color=""
        disabled={false}
        label="offer"
        onClick={[Function]}
      />
    </div>
  </div>
  <div
    data-stylename="body"
  >
    <div
      data-stylename="body-column"
    >
      <RoundImage
        data-stylename="titleAvatar"
        medium={true}
      />
    </div>
    <div
      data-stylename="body-column"
    >
      <input
        data-stylename="titleInput"
        disabled={false}
        onChange={[Function]}
        placeholder="request placeholder"
        type="text"
        value=""
      />
      <Connect(HyloEditor)
        data-stylename="editor"
        onChange={[Function]}
        parentComponent="PostEditor"
        placeholder="Add a description"
        readOnly={false}
      />
    </div>
  </div>
  <Connect(AttachmentManager)
    postId="new"
    type="image"
  />
  <Connect(AttachmentManager)
    postId="new"
    type="file"
  />
  <div
    data-stylename="footer"
  >
    <div
      data-stylename="postIn"
    >
      <div
        data-stylename="postIn-label"
      >
        Post in
      </div>
      <div
        data-stylename="postIn-communities"
      >
        <CommunitiesSelector
          onChange={[Function]}
          options={Array []}
          placeholder="Type community name..."
          readOnly={false}
          selected={Array []}
        />
      </div>
    </div>
    <ActionsBar
      loading={false}
      save={[Function]}
      submitButtonLabel="Post"
      valid={false}
    />
  </div>
</div>
`;

exports[`PostEditor for a new post initial prompt and placeholders 1`] = `
<div
  data-stylename="wrapper"
>
  <div
    data-stylename="header"
  >
    <div
      data-stylename="initial"
    >
      <div
        data-stylename="initial-prompt"
      >
        a test prompt
      </div>
      <a
        data-stylename="initial-closeButton"
      >
        <Icon
          name="Ex"
        />
      </a>
    </div>
    <div
      data-stylename="postTypes"
    >
      <Button
        className=""
        color=""
        disabled={false}
        label="discussion"
        onClick={[Function]}
      />
      <Button
        className="undefined"
        color=""
        disabled={false}
        label="request"
        onClick={[Function]}
      />
      <Button
        className="undefined"
        color=""
        disabled={false}
        label="offer"
        onClick={[Function]}
      />
    </div>
  </div>
  <div
    data-stylename="body"
  >
    <div
      data-stylename="body-column"
    >
      <RoundImage
        data-stylename="titleAvatar"
        medium={true}
      />
    </div>
    <div
      data-stylename="body-column"
    >
      <input
        data-stylename="titleInput"
        disabled={false}
        onChange={[Function]}
        placeholder="a test title placeholder"
        type="text"
        value=""
      />
      <Connect(HyloEditor)
        contentHTML=""
        data-stylename="editor"
        onChange={[Function]}
        parentComponent="PostEditor"
        placeholder="details placeholder"
        readOnly={false}
      />
    </div>
  </div>
  <Connect(AttachmentManager)
    postId="new"
    type="image"
  />
  <Connect(AttachmentManager)
    postId="new"
    type="file"
  />
  <div
    data-stylename="footer"
  >
    <div
      data-stylename="postIn"
    >
      <div
        data-stylename="postIn-label"
      >
        Post in
      </div>
      <div
        data-stylename="postIn-communities"
      >
        <CommunitiesSelector
          onChange={[Function]}
          options={Array []}
          placeholder="Type community name..."
          readOnly={false}
          selected={Array []}
        />
      </div>
    </div>
    <ActionsBar
      loading={false}
      save={[Function]}
      submitButtonLabel="Post"
      valid={false}
    />
  </div>
</div>
`;

exports[`PostEditor post is defaulted while loading editor 1`] = `
<div
  data-stylename="wrapper"
>
  <div
    data-stylename="header"
  >
    <div
      data-stylename="initial"
    >
      <div
        data-stylename="initial-prompt"
      >
        What are you looking to post?
      </div>
      <a
        data-stylename="initial-closeButton"
      >
        <Icon
          name="Ex"
        />
      </a>
    </div>
    <div
      data-stylename="postTypes"
    >
      <Button
        className=""
        color=""
        disabled={true}
        label="discussion"
        onClick={[Function]}
      />
      <Button
        className=""
        color=""
        disabled={true}
        label="request"
        onClick={[Function]}
      />
      <Button
        className=""
        color=""
        disabled={true}
        label="offer"
        onClick={[Function]}
      />
    </div>
  </div>
  <div
    data-stylename="body"
  >
    <div
      data-stylename="body-column"
    >
      <RoundImage
        data-stylename="titleAvatar"
        medium={true}
      />
    </div>
    <div
      data-stylename="body-column"
    >
      <input
        data-stylename="titleInput"
        disabled={true}
        onChange={[Function]}
        placeholder="What’s on your mind?"
        type="text"
        value=""
      />
      <Connect(HyloEditor)
        contentHTML=""
        data-stylename="editor"
        onChange={[Function]}
        parentComponent="PostEditor"
        placeholder="Add a description"
        readOnly={true}
      />
    </div>
  </div>
  <Connect(AttachmentManager)
    postId="new"
    type="image"
  />
  <Connect(AttachmentManager)
    postId="new"
    type="file"
  />
  <div
    data-stylename="footer"
  >
    <div
      data-stylename="postIn"
    >
      <div
        data-stylename="postIn-label"
      >
        Post in
      </div>
      <div
        data-stylename="postIn-communities"
      >
        <CommunitiesSelector
          onChange={[Function]}
          options={Array []}
          placeholder="Type community name..."
          readOnly={true}
          selected={Array []}
        />
      </div>
    </div>
    <ActionsBar
      loading={true}
      save={[Function]}
      submitButtonLabel="Save"
      valid={true}
    />
  </div>
</div>
`;

exports[`PostEditor post is defaulted while loading editor for NEW post 1`] = `
<div
  data-stylename="wrapper"
>
  <div
    data-stylename="header"
  >
    <div
      data-stylename="initial"
    >
      <div
        data-stylename="initial-prompt"
      >
        What are you looking to post?
      </div>
      <a
        data-stylename="initial-closeButton"
      >
        <Icon
          name="Ex"
        />
      </a>
    </div>
    <div
      data-stylename="postTypes"
    >
      <Button
        className=""
        color=""
        disabled={true}
        label="discussion"
        onClick={[Function]}
      />
      <Button
        className=""
        color=""
        disabled={true}
        label="request"
        onClick={[Function]}
      />
      <Button
        className=""
        color=""
        disabled={true}
        label="offer"
        onClick={[Function]}
      />
    </div>
  </div>
  <div
    data-stylename="body"
  >
    <div
      data-stylename="body-column"
    >
      <RoundImage
        data-stylename="titleAvatar"
        medium={true}
      />
    </div>
    <div
      data-stylename="body-column"
    >
      <input
        data-stylename="titleInput"
        disabled={true}
        onChange={[Function]}
        placeholder="What’s on your mind?"
        type="text"
        value=""
      />
      <Connect(HyloEditor)
        contentHTML=""
        data-stylename="editor"
        onChange={[Function]}
        parentComponent="PostEditor"
        placeholder="Add a description"
        readOnly={true}
      />
    </div>
  </div>
  <Connect(AttachmentManager)
    postId="new"
    type="image"
  />
  <Connect(AttachmentManager)
    postId="new"
    type="file"
  />
  <div
    data-stylename="footer"
  >
    <div
      data-stylename="postIn"
    >
      <div
        data-stylename="postIn-label"
      >
        Post in
      </div>
      <div
        data-stylename="postIn-communities"
      >
        <CommunitiesSelector
          onChange={[Function]}
          options={Array []}
          placeholder="Type community name..."
          readOnly={true}
          selected={Array []}
        />
      </div>
    </div>
    <ActionsBar
      loading={true}
      save={[Function]}
      submitButtonLabel="Post"
      valid={false}
    />
  </div>
</div>
`;

exports[`PostEditor renders with min props 1`] = `
<div
  data-stylename="wrapper"
>
  <div
    data-stylename="header"
  >
    <div
      data-stylename="initial"
    >
      <div
        data-stylename="initial-prompt"
      >
        What are you looking to post?
      </div>
      <a
        data-stylename="initial-closeButton"
      >
        <Icon
          name="Ex"
        />
      </a>
    </div>
    <div
      data-stylename="postTypes"
    >
      <Button
        className=""
        color=""
        disabled={false}
        label="discussion"
        onClick={[Function]}
      />
      <Button
        className="undefined"
        color=""
        disabled={false}
        label="request"
        onClick={[Function]}
      />
      <Button
        className="undefined"
        color=""
        disabled={false}
        label="offer"
        onClick={[Function]}
      />
    </div>
  </div>
  <div
    data-stylename="body"
  >
    <div
      data-stylename="body-column"
    >
      <RoundImage
        data-stylename="titleAvatar"
        medium={true}
      />
    </div>
    <div
      data-stylename="body-column"
    >
      <input
        data-stylename="titleInput"
        disabled={false}
        onChange={[Function]}
        placeholder="What’s on your mind?"
        type="text"
        value=""
      />
      <Connect(HyloEditor)
        contentHTML=""
        data-stylename="editor"
        onChange={[Function]}
        parentComponent="PostEditor"
        placeholder="Add a description"
        readOnly={false}
      />
    </div>
  </div>
  <Connect(AttachmentManager)
    postId="new"
    type="image"
  />
  <Connect(AttachmentManager)
    postId="new"
    type="file"
  />
  <div
    data-stylename="footer"
  >
    <div
      data-stylename="postIn"
    >
      <div
        data-stylename="postIn-label"
      >
        Post in
      </div>
      <div
        data-stylename="postIn-communities"
      >
        <CommunitiesSelector
          onChange={[Function]}
          options={Array []}
          placeholder="Type community name..."
          readOnly={false}
          selected={Array []}
        />
      </div>
    </div>
    <ActionsBar
      loading={false}
      save={[Function]}
      submitButtonLabel="Post"
      valid={false}
    />
  </div>
</div>
`;
